<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Routine name="CPM.LIB" type="INC"><![CDATA[
#include %occInclude
#include %occErrors

#; get value from array with default
#define GetParam(%arr,%name,%def) $select($data(%arr(%name),tmpRes)&&(tmpRes'=""):tmpRes,1:%def)

#define UrlParser(%url,%parsed) if $data(%url)=1 { do ##class(%Net.URLParser).Parse(%url, .%parsed) } else { merge %parsed=%url } 

#define CpmVar  ^||CPM.Main
#define CpmInstance ##class(CPM.Main).%Instance()
#define CpmConfig   $$$CpmInstance.Config
#define CpmRegistry $$$CpmInstance.Registry
#define CpmInstall  $$$CpmInstance.install
#define CpmSearch   $$$CpmInstance.search

#define UtilMakePath(%dir,%name) ##class(%Library.File).NormalizeFilename(%name,%dir)

#; session global suppose to be not mapped to the central CPM database
#define CpmSessionGlobal $name(^CPM.Session)
#define CpmLastPkgName @$$$CpmSessionGlobal@("LastPackage")
#define CpmLastPkgJson @$$$CpmSessionGlobal@("Package.json")

#define CPMCOMPILELOG(%s) set ^cpm.compile.log($increment(^cpm.compile.log)) = ##quote(%s)_"="_%s

#; FIXME - doesn't work yet - return after %ParseJSON  made to work with user types
#if 0 ;$$$comClassDefined("%Library.Array")
#define JsonObject %Object
#define JsonProvider %ZEN.Auxiliary.altJSONProvider
#else
#define JsonObject %ZEN.proxyObject
#define JsonProvider %ZEN.Auxiliary.jsonProvider
#endif
]]></Routine>
</Export>
