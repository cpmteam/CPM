<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="CPM.Source.TarGz">
<Super>%RegisteredObject,CPM.Source.IBase</Super>
<TimeCreated>63578,9135.530254</TimeCreated>

<Parameter name="EXTENSIONS">
<Type>%String</Type>
<Default>TGZ,GZ</Default>
</Parameter>

<Parameter name="MANIFEST">
<Type>%String</Type>
<Default>package.json</Default>
</Parameter>

<Method name="IsPackedGet">
<Description>
override IsPacked property to be always returning 1</Description>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    quit 1

]]></Implementation>
</Method>

<Method name="IsPackedSet">
<FormalSpec>Val:%Boolean</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    #; simply ignore
    quit $$$OK

]]></Implementation>
</Method>

<Method name="Open">
<FormalSpec>fileName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    #; not try to actually open file
    set ..FileName = fileName
    quit ##class(%File).Exists(..FileName)

]]></Implementation>
</Method>

<Method name="Unpack">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    #dim tFileStream As %Stream.FileBinaryGzip = ##class(%Stream.FileBinaryGzip).%New()

    set tFileStream.Filename = ..FileName
    set ..PackageContent = ##class(CPM.Utils.FileBinaryTar).ExtractStreamToArray(tFileStream)
    kill tFileStream

    quit $isobject(i%PackageContent)

]]></Implementation>
</Method>

<Method name="Parse">
<ReturnType>CPM.IPackage</ReturnType>
<Implementation><![CDATA[
    if '$isobject(..PackageContent) {
        quit $$$NULLOREF
    }

    set ..PackageContent = ..PackageContent.GetNext()   // what the heck?
    // FIXME - typed declaration
    set metaInfo         = ..PackageContent.GetAt(..#MANIFEST)
    if '$isobject(metaInfo) {
        quit $$$NULLOREF
    }
    
    #dim metaInfoData As %Stream.FileBinary = metaInfo.fileData
    if '##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(metaInfoData.Read(metaInfoData.Size),,
                                                                  .metaInfo) 
    {
        quit $$$NULLOREF
    }
    #dim name As %String        = metaInfo.name
    #dim description As %String = $zconvert(metaInfo.description,"I","UTF8")
    #dim version As %String     = metaInfo.version

    quit ##class(CPM.IPackage).Create(name, description, version)


]]></Implementation>
</Method>
</Class>
</Export>
